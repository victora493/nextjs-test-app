{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documentos\\\\nextjs-course\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails(_ref) {\n  var image = _ref.image,\n      id = _ref.id,\n      title = _ref.title,\n      address = _ref.address,\n      description = _ref.description;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: id,\n    image: image,\n    title: title,\n    address: address,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Documentos/nextjs-course/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetUpDetails","image","id","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,OAAmE;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,EAAmC,QAAnCA,EAAmC;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,WAAe,QAAfA,WAAe;AAC/D,sBACI,QAAC,YAAD;AACI,IAAA,EAAE,EAAEH,EADR;AAEI,IAAA,KAAK,EAAED,KAFX;AAGI,IAAA,KAAK,EAAEE,KAHX;AAII,IAAA,OAAO,EAAEC,OAJb;AAKI,IAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;KAVQL,a;;AA0DT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetUpDetails({ image, id, title, address, description }) {\r\n    return (\r\n        <MeetupDetail\r\n            id={id}\r\n            image={image}\r\n            title={title}\r\n            address={address}\r\n            description={description}\r\n        />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\r\n\r\n    client.close()\r\n\r\n    return {\r\n        // if false tells next-js to only pre-generate the pages with the params saved and not try to generate a new page if an \"unknown\" param is requested\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.\r\n    \r\n    console.log(meetupId)\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId })\r\n\r\n    console.log(selectedMeetup)\r\n\r\n    client.close()\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                image: selectedMeetup.image,\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetUpDetails"]},"metadata":{},"sourceType":"module"}