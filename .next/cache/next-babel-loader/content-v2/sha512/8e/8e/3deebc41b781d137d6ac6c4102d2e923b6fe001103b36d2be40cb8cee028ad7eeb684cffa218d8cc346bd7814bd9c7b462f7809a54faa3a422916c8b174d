{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documentos\\\\nextjs-course\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails(_ref) {\n  var meetupData = _ref.meetupData;\n  var image = meetupData.image,\n      id = meetupData.id,\n      title = meetupData.title,\n      address = meetupData.address,\n      description = meetupData.description;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        \"name-\": \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: id,\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = MeetUpDetails;\nexport var __N_SSG = true;\nexport default MeetUpDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetUpDetails\");","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Documentos/nextjs-course/pages/[meetupId]/index.js"],"names":["Head","MeetupDetail","MeetUpDetails","meetupData","image","id","title","address","description"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAAA,MAC3BC,KAD2B,GACgBD,UADhB,CAC3BC,KAD2B;AAAA,MACpBC,EADoB,GACgBF,UADhB,CACpBE,EADoB;AAAA,MAChBC,KADgB,GACgBH,UADhB,CAChBG,KADgB;AAAA,MACTC,OADS,GACgBJ,UADhB,CACTI,OADS;AAAA,MACAC,WADA,GACgBL,UADhB,CACAK,WADA;AAEnC,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,iBAAM;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AACI,MAAA,EAAE,EAAED,EADR;AAEI,MAAA,KAAK,EAAED,KAFX;AAGI,MAAA,KAAK,EAAEE,KAHX;AAII,MAAA,OAAO,EAAEC,OAJb;AAKI,MAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAeH;;KAjBQN,a;;AAmET,eAAeA,aAAf","sourcesContent":["import Head from \"next/head\"\r\nimport { MongoClient, ObjectId } from \"mongodb\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetUpDetails({ meetupData }) {\r\n    const { image, id, title, address, description } = meetupData\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{title}</title>\r\n                <meta name-=\"\" />\r\n            </Head>\r\n            <MeetupDetail\r\n                id={id}\r\n                image={image}\r\n                title={title}\r\n                address={address}\r\n                description={description}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\r\n\r\n    client.close()\r\n\r\n    return {\r\n        // if false tells next-js to only pre-generate the pages with the params saved and not try to generate a new page if an \"unknown\" param is requested\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  console.log('selected meetup:', selectedMeetup)\r\n\r\n  client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                image: selectedMeetup.image,\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetUpDetails"]},"metadata":{},"sourceType":"module"}