{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documentos\\\\nextjs-course\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails({\n  image,\n  id,\n  title,\n  address,\n  description\n}) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: id,\n    image: image,\n    title: title,\n    address: address,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    // if false tells next-js to only pre-generate the pages with the params saved and not try to generate a new page if an \"unknown\" param is requested\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.console.log(object);\n  const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  console.log(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.image,\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Documentos/nextjs-course/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetUpDetails","image","id","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","object","selectedMeetup","findOne","props","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,EAAT;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA;AAA7B,CAAvB,EAAmE;AAC/D,sBACI,QAAC,YAAD;AACI,IAAA,EAAE,EAAEH,EADR;AAEI,IAAA,KAAK,EAAED,KAFX;AAGI,IAAA,KAAK,EAAEE,KAHX;AAII,IAAA,OAAO,EAAEC,OAJb;AAKI,IAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACH;AACAC,IAAAA,QAAQ,EAAE,KAFP;AAGHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAV,KAAL,CAAlB;AAHJ,GAAP;AAKH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAEjBK,OAFiB,CAETC,GAFS,CAELC,MAFK,CAAjB;AAIA,QAAMrB,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMkB,cAAc,GAAG,MAAMnB,iBAAiB,CAACoB,OAAlB,CAA0B;AAAEhB,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYE,cAAZ;AAEAtB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHe,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR9B,QAAAA,EAAE,EAAE2B,cAAc,CAACf,GAAf,CAAmBS,QAAnB,EADI;AAERtB,QAAAA,KAAK,EAAE4B,cAAc,CAAC5B,KAFd;AAGRE,QAAAA,KAAK,EAAE0B,cAAc,CAAC1B,KAHd;AAIRC,QAAAA,OAAO,EAAEyB,cAAc,CAACzB,OAJhB;AAKRC,QAAAA,WAAW,EAAEwB,cAAc,CAACxB;AALpB;AADT;AADJ,GAAP;AAWH;AAED,eAAeL,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetUpDetails({ image, id, title, address, description }) {\r\n    return (\r\n        <MeetupDetail\r\n            id={id}\r\n            image={image}\r\n            title={title}\r\n            address={address}\r\n            description={description}\r\n        />\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\r\n\r\n    client.close()\r\n\r\n    return {\r\n        // if false tells next-js to only pre-generate the pages with the params saved and not try to generate a new page if an \"unknown\" param is requested\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.\r\n    \r\n    console.log(object)\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId })\r\n\r\n    console.log(selectedMeetup)\r\n\r\n    client.close()\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                image: selectedMeetup.image,\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetUpDetails"]},"metadata":{},"sourceType":"module"}