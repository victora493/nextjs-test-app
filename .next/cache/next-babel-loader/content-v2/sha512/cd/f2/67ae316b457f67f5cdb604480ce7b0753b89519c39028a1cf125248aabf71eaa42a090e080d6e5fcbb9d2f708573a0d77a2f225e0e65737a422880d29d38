{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\OneDrive\\\\Documentos\\\\nextjs-course\\\\pages\\\\[meetupId]\\\\index.js\";\nimport Head from \"next/head\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetUpDetails({\n  meetupData\n}) {\n  const {\n    image,\n    id,\n    title,\n    address,\n    description\n  } = meetupData;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: id,\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    // if false tells next-js to only pre-generate the pages with the params saved and not try to generate a new page if an \"unknown\" param is requested\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log('selected meetup:', selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.image,\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/victo/OneDrive/Documentos/nextjs-course/pages/[meetupId]/index.js"],"names":["Head","MongoClient","ObjectId","MeetupDetail","MeetUpDetails","meetupData","image","id","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAuC;AACnC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,EAAT;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAA6CL,UAAnD;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQG;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AACI,MAAA,EAAE,EAAED,EADR;AAEI,MAAA,KAAK,EAAED,KAFX;AAGI,MAAA,KAAK,EAAEE,KAHX;AAII,MAAA,OAAO,EAAEC,OAJb;AAKI,MAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAeH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,kGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACH;AACAC,IAAAA,QAAQ,EAAE,KAFP;AAGHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAV,KAAL,CAAlB;AAHJ,GAAP;AAKH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEF,QAAMf,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,kGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACrDb,IAAAA,GAAG,EAAEjB,QAAQ,CAACyB,QAAD;AADwC,GAA1B,CAA7B;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,cAAhC;AAEAnB,EAAAA,MAAM,CAACS,KAAP;AAEE,SAAO;AACHc,IAAAA,KAAK,EAAE;AACH9B,MAAAA,UAAU,EAAE;AACRE,QAAAA,EAAE,EAAEwB,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERtB,QAAAA,KAAK,EAAEyB,cAAc,CAACzB,KAFd;AAGRE,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAHd;AAIRC,QAAAA,OAAO,EAAEsB,cAAc,CAACtB,OAJhB;AAKRC,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALpB;AADT;AADJ,GAAP;AAWH;AAED,eAAeN,aAAf","sourcesContent":["import Head from \"next/head\"\r\nimport { MongoClient, ObjectId } from \"mongodb\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\n\r\nfunction MeetUpDetails({ meetupData }) {\r\n    const { image, id, title, address, description } = meetupData\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{title}</title>\r\n                <meta name=\"\" />\r\n            </Head>\r\n            <MeetupDetail\r\n                id={id}\r\n                image={image}\r\n                title={title}\r\n                address={address}\r\n                description={description}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority')\r\n    const db = client.db()\r\n\r\n    const meetupsCollection = db.collection('meetups')\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\r\n\r\n    client.close()\r\n\r\n    return {\r\n        // if false tells next-js to only pre-generate the pages with the params saved and not try to generate a new page if an \"unknown\" param is requested\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://victora493:pilon123@cluster0.pdrhe.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  console.log('selected meetup:', selectedMeetup)\r\n\r\n  client.close();\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                image: selectedMeetup.image,\r\n                title: selectedMeetup.title,\r\n                address: selectedMeetup.address,\r\n                description: selectedMeetup.description,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetUpDetails"]},"metadata":{},"sourceType":"module"}